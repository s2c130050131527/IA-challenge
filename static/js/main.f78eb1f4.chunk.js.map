{"version":3,"sources":["TableView.js","App.js","reportWebVitals.js","index.js","App.module.scss"],"names":["TableView","App","useState","showLoader","setShowLoader","data","setData","error","setError","useEffect","fetch","then","res","json","catch","err","message","className","styles","loaderContainer","type","color","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yNACe,SAASA,IACpB,OACI,6C,oBCmCOC,MA/Bf,WAAgB,IAAD,EACuBC,oBAAS,GADhC,mBACNC,EADM,KACMC,EADN,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGaJ,mBAAS,MAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAkBb,OAbAC,qBAAU,WACRD,EAAS,MACTE,MATF,6EAUKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLN,EAAQM,GACRR,GAAc,MAEfU,OAAM,SAACC,GACNP,EAASO,EAAIC,cAEhB,IAGD,qBAAKC,UAAU,MAAf,SACGd,EACC,qBAAKc,UAAWC,IAAOC,gBAAvB,SACE,cAAC,IAAD,CAAQC,KAAK,OAAOC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,QAG1D,cAACvB,EAAD,CAAWK,KAAMA,EAAME,MAAOA,OCpBvBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAa,EAAOC,QAAU,CAAC,gBAAkB,gC","file":"static/js/main.f78eb1f4.chunk.js","sourcesContent":["\nexport default function TableView() {\n    return (\n        <div>\n            Table View\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport TableView from \"./TableView\";\nimport styles from \"./App.module.scss\";\nconst API_URL =\n  \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/reciped9d7b8c.json\";\n\nfunction App() {\n  const [showLoader, setShowLoader] = useState(true);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setError(null);\n    fetch(API_URL)\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n        setShowLoader(false);\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {showLoader ? (\n        <div className={styles.loaderContainer}>\n          <Loader type=\"Grid\" color=\"#6f8392\" height={100} width={100}></Loader>\n        </div>\n      ) : (\n        <TableView data={data} error={error} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"App_loaderContainer__11q_E\"};"],"sourceRoot":""}